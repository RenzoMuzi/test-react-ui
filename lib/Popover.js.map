{"version":3,"file":"Popover.js","sources":["../src/ui/Popover.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\n\nconst getId = errorMessage => errorMessage && errorMessage.id;\n\nconst hasId = errorMessage => !!getId(errorMessage);\n\nconst errorChanged = (errorMessage, nextErrorMessage) => (\n  hasId(nextErrorMessage) && getId(errorMessage) !== getId(nextErrorMessage)\n);\n\nconst MarginX = 20;\n\nclass Popover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.$parent = null;\n    this.$popover = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleOnResize, { passive: true });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleOnResize, {\n      passive: true,\n    });\n  }\n\n  handleOnResize = () => {\n    if (!this.$parent) return;\n\n    this.adjustPosition();\n  };\n\n  render() {\n    const { content, containerClassName, popoverClassName } = this.props;\n\n    const containerStyles = classNames(containerClassName, 'c-popover__container');\n    const popoverStyles = classNames(popoverClassName, 'c-popover');\n\n    return (\n      <div className={containerStyles}>\n        <div\n          ref={ref => {\n            this.$popover = ref;\n          }}\n          className={popoverStyles}\n        >\n          <div>{content}</div>\n        </div>\n      </div>\n    );\n  }\n\n  adjust($parent) {\n    this.$parent = $parent;\n\n    this.adjustPosition();\n  }\n\n  adjustPosition() {\n    const newLeft = this.calculateLeft();\n    const newMaxWidth = this.calculateMaxWidth();\n\n    window.requestAnimationFrame(() => {\n      if (!this.$popover) return;\n\n      this.$popover.style.left = `${newLeft}px`;\n      this.$popover.style.maxWidth = `${newMaxWidth}px`;\n\n      const newTop = this.calculateTop();\n      this.$popover.style.top = `${newTop}px`;\n    });\n  }\n\n  calculateTop() {\n    const { clientHeight } = this.$popover;\n\n    const midHeight = clientHeight / 2;\n    const parentHeight = this.$parent.clientHeight / 2;\n\n    return parentHeight - midHeight;\n  }\n\n  calculateLeft() {\n    const rect = this.$parent.getBoundingClientRect();\n\n    return rect.width;\n  }\n\n  calculateMaxWidth() {\n    const rect = this.$parent.getBoundingClientRect();\n\n    const bodyWidth = document.body.clientWidth;\n\n    return bodyWidth - rect.left - rect.width - MarginX;\n  }\n}\n\nconst getDisplayName = WrappedComponent =>\n  WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\nexport const withPopover = WrappedComponent => {\n  /* eslint-disable-next-line react/no-multi-comp */\n  const wrapper = class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        currentErrorMessage: props.errorMessage,\n        isPopoverDismissed: false,\n      };\n\n      this.$root = null;\n      this.$popover = null;\n    }\n\n    componentDidMount() {\n      this.positionPopover();\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const { errorMessage: nextErrorMessage } = nextProps;\n      const { currentErrorMessage } = this.state;\n\n      if (!hasId(nextErrorMessage)) {\n        this.destroyPopover();\n      }\n\n      if (\n        errorChanged(currentErrorMessage, nextErrorMessage)\n      ) {\n        this.attachNewPopover(nextProps);\n      }\n    }\n\n    componentDidUpdate() {\n      this.positionPopover();\n    }\n\n    componentWillUnmount() {\n      this.destroyPopover();\n    }\n\n    handleOnChange = (...args) => {\n      const { onChange } = this.props;\n\n      this.destroyPopover();\n\n      onChange(...args);\n    };\n\n    render() {\n      const { wrapperClassName, ...passThroughProps } = this.props;\n      const { currentErrorMessage, isPopoverDismissed } = this.state;\n\n      const popover =\n        hasId(currentErrorMessage) && !isPopoverDismissed ? (\n          <Popover\n            ref={ref => {\n              this.$popover = ref;\n            }}\n            key={currentErrorMessage.id}\n            content={currentErrorMessage.text}\n          />\n        ) : null;\n\n      return (\n        <span className={`flex flex-auto ${wrapperClassName}`}>\n          {popover}\n          <span\n            className=\"c-popover__component-wrapper\"\n            ref={ref => {\n              this.$root = ref;\n            }}\n          >\n            <WrappedComponent\n              onChange={this.handleOnChange}\n              {...passThroughProps}\n            />\n          </span>\n        </span>\n      );\n    }\n\n    attachNewPopover(props) {\n      const { errorMessage } = props;\n\n      this.setState({\n        currentErrorMessage: errorMessage,\n        isPopoverDismissed: false,\n      });\n    }\n\n    destroyPopover() {\n      this.setState({ isPopoverDismissed: true });\n    }\n\n    positionPopover() {\n      let { currentErrorMessage, isPopoverDismissed } = this.state;\n\n      if (hasId(currentErrorMessage) && !isPopoverDismissed) {\n        this.$popover.adjust(this.$root);\n      }\n    }\n  };\n\n  wrapper.displayName = `WithPopover(${getDisplayName(WrappedComponent)})`;\n\n  wrapper.defaultProps = {\n    wrapperClassName: '',\n    errorMessage: {},\n    onChange: () => {},\n  };\n\n  wrapper.propTypes = {\n    errorMessage: PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    }),\n    wrapperClassName: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  return wrapper;\n};\n\nPopover.displayName = 'Popover';\n\nPopover.propTypes = {\n  /** Popover's content */\n  content: PropTypes.string.isRequired,\n  /** Popover's container CSS class */\n  containerClassName: PropTypes.string,\n  /** Popover's CSS class */\n  popoverClassName: PropTypes.string,\n};\n\nPopover.defaultProps = {\n  containerClassName: '',\n  popoverClassName: '',\n};\n\nexport default Popover;\n"],"names":["getId","errorMessage","id","hasId","errorChanged","nextErrorMessage","MarginX","Popover","props","handleOnResize","_this","$parent","adjustPosition","$popover","Component","addEventListener","this","passive","removeEventListener","content","containerClassName","popoverClassName","containerStyles","classNames","popoverStyles","React","className","ref","newLeft","calculateLeft","newMaxWidth","calculateMaxWidth","requestAnimationFrame","_this3","style","left","maxWidth","newTop","calculateTop","top","midHeight","clientHeight","getBoundingClientRect","width","rect","document","body","clientWidth","getDisplayName","WrappedComponent","displayName","name","withPopover","wrapper","handleOnChange","onChange","_this4","destroyPopover","state","$root","positionPopover","nextProps","currentErrorMessage","attachNewPopover","wrapperClassName","passThroughProps","isPopoverDismissed","popover","text","setState","adjust","defaultProps","propTypes","PropTypes","shape","string","func","isRequired"],"mappings":"kxCAIMA,MAAQ,mBAAgBC,GAAgBA,EAAaC,IAErDC,MAAQ,oBAAkBH,MAAMC,IAEhCG,aAAe,SAACH,EAAcI,UAClCF,MAAME,IAAqBL,MAAMC,KAAkBD,MAAMK,IAGrDC,QAAU,GAEVC,+BACQC,iHACJA,aAgBRC,eAAiB,WACVC,EAAKC,WAELC,oBAjBAD,QAAU,OACVE,SAAW,yBALEC,2EASXC,iBAAiB,SAAUC,KAAKP,gBAAkBQ,SAAS,0DAI3DC,oBAAoB,SAAUF,KAAKP,yBAC/B,kDAW+CO,KAAKR,MAAvDW,IAAAA,QAASC,IAAAA,mBAAoBC,IAAAA,iBAE/BC,EAAkBC,WAAWH,EAAoB,wBACjDI,EAAgBD,WAAWF,EAAkB,oBAGjDI,2BAAKC,UAAWJ,kCAEP,cACET,SAAWc,aAEPH,sEAQZb,QACAA,QAAUA,OAEVC,qEAICgB,EAAUZ,KAAKa,gBACfC,EAAcd,KAAKe,2BAElBC,sBAAsB,cACtBC,EAAKpB,YAELA,SAASqB,MAAMC,KAAUP,SACzBf,SAASqB,MAAME,SAAcN,WAE5BO,EAASJ,EAAKK,iBACfzB,SAASqB,MAAMK,IAASF,qDAOzBG,EAFmBxB,KAAKH,SAAtB4B,aAEyB,SACZzB,KAAKL,QAAQ8B,aAAe,EAE3BD,iDAITxB,KAAKL,QAAQ+B,wBAEdC,sDAINC,EAAO5B,KAAKL,QAAQ+B,+BAERG,SAASC,KAAKC,YAEbH,EAAKT,KAAOS,EAAKD,MAAQrC,iBAI1C0C,eAAiB,mBACrBC,EAAiBC,aAAeD,EAAiBE,MAAQ,aAE9CC,YAAc,gBAEnBC,yBACQ7C,iHACJA,aAsCR8C,eAAiB,eACPC,EAAaC,EAAKhD,MAAlB+C,WAEHE,8CAvCAC,2BACkBlD,EAAMP,iCACP,KAGjB0D,MAAQ,OACR9C,SAAW,yBAVUC,yEAcrB8C,oEAGmBC,OACFxD,EAAqBwD,EAAnC5D,aACA6D,EAAwB9C,KAAK0C,MAA7BI,oBAEH3D,MAAME,SACJoD,iBAILrD,aAAa0D,EAAqBzD,SAE7B0D,iBAAiBF,qDAKnBD,sEAIAH,+DAY6CzC,KAAKR,MAA/CwD,IAAAA,iBAAqBC,oDACuBjD,KAAK0C,MAAjDI,IAAAA,oBAAqBI,IAAAA,mBAEvBC,EACJhE,MAAM2D,KAAyBI,EAC7BzC,oBAAClB,aACM,cACEM,SAAWc,OAEbmC,EAAoB5D,WAChB4D,EAAoBM,OAE7B,YAGJ3C,4BAAMC,4BAA6BsC,2CAGrB,mCACL,cACEL,MAAQhC,wBAGdsB,qBACWjC,KAAKsC,gBACXW,+CAOGzD,OACPP,EAAiBO,EAAjBP,kBAEHoE,8BACkBpE,sBACD,kDAKjBoE,UAAWH,oBAAoB,oDAIclD,KAAK0C,MAAjDI,IAAAA,oBAAqBI,IAAAA,mBAEvB/D,MAAM2D,KAAyBI,QAC5BrD,SAASyD,OAAOtD,KAAK2C,yBAKxBT,2BAA6BF,eAAeC,SAE5CsB,+BACY,4BAER,gBAGJC,wBACQC,UAAUC,UAClBD,UAAUE,YACRF,UAAUE,0BAEAF,UAAUE,gBAClBF,UAAUG,MAGfvB,GAGT9C,QAAQ2C,YAAc,UAEtB3C,QAAQiE,mBAEGC,UAAUE,OAAOE,8BAENJ,UAAUE,wBAEZF,UAAUE,QAG9BpE,QAAQgE,iCACc,oBACF"}