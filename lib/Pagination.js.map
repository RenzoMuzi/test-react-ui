{"version":3,"file":"Pagination.js","sources":["../src/ui/Pagination.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass Pagination extends React.PureComponent {\n  handleOnPageSizeChange = (event) => {\n    const pageSize = Number(event.target.value);\n    this.props.onPaginationChange({ startIndex: 0, pageSize });\n  };\n\n  handleOnIncreasePage = () => {\n    const {\n      startIndex, pageSize, count, onPaginationChange,\n    } = this.props;\n    if (startIndex + pageSize >= count) return;\n    onPaginationChange({ startIndex: Math.min(count, startIndex + pageSize), pageSize });\n  };\n\n  handleOnDecreasePage = () => {\n    const { startIndex, pageSize, onPaginationChange } = this.props;\n    if (startIndex === 0) return;\n    onPaginationChange({ startIndex: Math.max(0, startIndex - pageSize), pageSize });\n  };\n\n  render() {\n    const {\n      count, startIndex, pageSize, pageSizeOptions, text,\n      pageClassName, disabledColor, changePageClassName, selectClassName,\n    } = this.props;\n    const currentPageEnd = startIndex + pageSize;\n    const decreasePageClassName = classNames(\n      startIndex === 0 ? disabledColor : '',\n      'fs16 fa fa-caret-left px1',\n      startIndex !== 0 ? `${changePageClassName} pointer` : '',\n    );\n    const increasePageClassName = classNames(\n      currentPageEnd >= count ? disabledColor : '',\n      'fs16 fa fa-caret-right pl1',\n      currentPageEnd < count ? `${changePageClassName} pointer` : '',\n    );\n\n    return (\n      <div className={classNames('flex items-center lh-21', pageClassName)}>\n        <select\n          className={selectClassName}\n          value={pageSize}\n          onChange={this.handleOnPageSizeChange}\n        >\n          {pageSizeOptions.map(size => (\n            <option value={size} key={size}>\n              {size}\n            </option>\n          ))}\n        </select>\n        <div className=\"px1\">{text}</div>\n        <i\n          className={decreasePageClassName}\n          onClick={this.handleOnDecreasePage}\n        />\n        <div>{`${startIndex + 1} - ${Math.min(count, currentPageEnd)} of ${count}`}</div>\n        <i\n          className={increasePageClassName}\n          onClick={this.handleOnIncreasePage}\n        />\n      </div>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  count: 0,\n  pageSizeOptions: [10, 100, 500, 1000, 5000],\n  pageSize: 10,\n  startIndex: 0,\n  pageClassName: '',\n  disabledColor: 'gray',\n  changePageClassName: 'hover-primary',\n  selectClassName: 'px1 select-small',\n  text: 'per page',\n};\n\nPagination.propTypes = {\n  /** Options for amount of items per page */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\n  /** Amount of items per page */\n  pageSize: PropTypes.number,\n  /** Parent callback function for pagination changes */\n  onPaginationChange: PropTypes.func.isRequired,\n  /** Maximum amount of items */\n  count: PropTypes.number,\n  /** The index of item the pagination should start at */\n  startIndex: PropTypes.number,\n  /** CSS class name pagination container */\n  pageClassName: PropTypes.string,\n  /** CSS class name for the disbale state of pagination arrows */\n  disabledColor: PropTypes.string,\n  /** CSS class name for pagination arrows */\n  changePageClassName: PropTypes.string,\n  /** CSS class name for the select component */\n  selectClassName: PropTypes.string,\n  /** Text to be shown between select and pages */\n  text: PropTypes.string,\n};\n\nexport default Pagination;\n"],"names":["Pagination","handleOnPageSizeChange","event","pageSize","Number","target","value","props","onPaginationChange","startIndex","handleOnIncreasePage","_this","count","Math","min","handleOnDecreasePage","max","this","pageSizeOptions","text","pageClassName","disabledColor","changePageClassName","selectClassName","currentPageEnd","decreasePageClassName","classNames","increasePageClassName","React","className","map","size","key","PureComponent","defaultProps","propTypes","PropTypes","arrayOf","number","func","isRequired","string"],"mappings":"48BAIMA,+PACJC,uBAAyB,SAACC,OAClBC,EAAWC,OAAOF,EAAMG,OAAOC,SAChCC,MAAMC,oBAAqBC,WAAY,EAAGN,gBAGjDO,qBAAuB,iBAGjBC,EAAKJ,MADPE,IAAAA,WAAYN,IAAAA,SAAUS,IAAAA,MAAOJ,IAAAA,mBAE3BC,EAAaN,GAAYS,MACRH,WAAYI,KAAKC,IAAIF,EAAOH,EAAaN,GAAWA,gBAG3EY,qBAAuB,iBACgCJ,EAAKJ,MAAlDE,IAAAA,WAAYN,IAAAA,SAAUK,IAAAA,mBACX,IAAfC,MACiBA,WAAYI,KAAKG,IAAI,EAAGP,EAAaN,GAAWA,sHAOjEc,KAAKV,MAFPK,IAAAA,MAAOH,IAAAA,WAAYN,IAAAA,SAAUe,IAAAA,gBAAiBC,IAAAA,KAC9CC,IAAAA,cAAeC,IAAAA,cAAeC,IAAAA,oBAAqBC,IAAAA,gBAE/CC,EAAiBf,EAAaN,EAC9BsB,EAAwBC,WACb,IAAfjB,EAAmBY,EAAgB,GACnC,4BACe,IAAfZ,EAAsBa,aAAgC,IAElDK,EAAwBD,WAC5BF,GAAkBZ,EAAQS,EAAgB,GAC1C,6BACAG,EAAiBZ,EAAWU,aAAgC,WAI5DM,2BAAKC,UAAWH,WAAW,0BAA2BN,4CAEvCG,QACJpB,WACGc,KAAKhB,0BAEE6B,IAAI,mBACnBF,8BAAQtB,MAAOyB,EAAMC,IAAKD,oCAKzBF,UAAU,6CAEFJ,UACFR,KAAKF,wDAEM,QAAOF,KAAKC,IAAIF,EAAOY,UAAsBZ,sCAEtDe,UACFV,KAAKP,+BA1DCkB,MAAMK,eAiE/BjC,WAAWkC,oBACF,mBACW,GAAI,IAAK,IAAK,IAAM,cAC5B,cACE,gBACG,iBACA,2BACM,gCACJ,wBACX,YAGRlC,WAAWmC,2BAEQC,UAAUC,QAAQD,UAAUE,iBAEnCF,UAAUE,0BAEAF,UAAUG,KAAKC,iBAE5BJ,UAAUE,kBAELF,UAAUE,qBAEPF,UAAUK,qBAEVL,UAAUK,2BAEJL,UAAUK,uBAEdL,UAAUK,YAErBL,UAAUK"}